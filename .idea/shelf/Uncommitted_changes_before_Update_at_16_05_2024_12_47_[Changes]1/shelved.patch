Index: app/src/main/java/src/Entity/Entity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package src.Entity;\r\n\r\nimport src.main.GamePanel;\r\nimport src.main.UtilityTool;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\n\r\n/*\r\nSUPER CLASS UNTUK SEMUA OBJECT YANG DIBUAT PADA PROGRAM\r\n\r\nTODO : IMPLEMENT abstract PLANT yang extend Entity.\r\n       IMPLEMENT abstract ZOMBIE yang extend Entity\r\n       Buat ArrayList baru di GamePanel untuk menyimpan Plant dan Zombie saja\r\n\r\n */\r\npublic class Entity {\r\n    GamePanel gp;\r\n\r\n    public int worldX ,worldY;\r\n    public int speed;\r\n\r\n    public BufferedImage up1, up2, down1, down2, left1, left2, right1, right2;//Store image file\r\n    public String direction = \"down\"; //DEFAULT\r\n\r\n    public int spriteCounter = 0;\r\n    public int spriteNum = 1;\r\n\r\n    //ENTITY STATUS\r\n    public int maxHealth;\r\n    public int Health;\r\n\r\n    public Rectangle solidArea = new Rectangle(0,0,48,48);\r\n    public int solidAreaDefaultX, solidAreaDefaultY;\r\n    public boolean collisionOn = false;\r\n\r\n    //FOR OBJECT\r\n    public BufferedImage image;\r\n    public String name;\r\n    public boolean collision = false;\r\n\r\n\r\n    //TickCounter\r\n    public int tickCounter;\r\n\r\n    //CONSTRUCTOR\r\n    public Entity(GamePanel gp){\r\n        this.gp = gp;\r\n    }\r\n\r\n    //SETACTION and UPDATE method for Entity\r\n    public void setAction(){}\r\n\r\n    public void update(){\r\n        setAction();\r\n\r\n        collisionOn = false;\r\n        gp.collisionChecker.checkTile(this);\r\n        gp.collisionChecker.checkObject(this, false);\r\n        gp.collisionChecker.checkEntity(this, gp.zombie);\r\n\r\n        //if collisionOn = false player can move\r\n        if(collisionOn == false) {\r\n            switch (direction) {\r\n                case \"up\":\r\n                    worldY -= speed;\r\n                    break;\r\n                case \"down\":\r\n                    worldY += speed;\r\n                    break;\r\n                case \"left\":\r\n                    worldX -= speed;\r\n                    break;\r\n                case \"right\":\r\n                    worldX += speed;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //Image change every 20 frame\r\n        spriteCounter++;\r\n        if(spriteCounter > 20){\r\n            if(spriteNum == 1){\r\n                spriteNum = 2;\r\n            }\r\n            else if(spriteNum == 2){\r\n                spriteNum = 1;\r\n            }\r\n            spriteCounter = 0;\r\n        }\r\n    }\r\n    public BufferedImage setup(String imagePath){\r\n        UtilityTool uTool = new UtilityTool();\r\n        BufferedImage Image = null;\r\n\r\n        try {\r\n            Image = ImageIO.read(getClass().getResourceAsStream(imagePath));\r\n            Image = uTool.scaledImage(Image, gp.getTileSize(), gp.getTileSize());\r\n\r\n        }\r\n        catch(IOException e){\r\n            e.getStackTrace();\r\n        }\r\n        return Image;\r\n    }\r\n\r\n    public void draw(Graphics2D g2){\r\n\r\n        BufferedImage image = null;\r\n\r\n        int screenX = worldX - gp.player.worldX + gp.player.screenX;\r\n        int screenY = worldY - gp.player.worldY + gp.player.screenY;\r\n\r\n        if(     worldX + gp.getTileSize() > gp.player.worldX - gp.player.screenX  &&\r\n                worldX - gp.getTileSize() < gp.player.worldX + gp.player.screenX  &&\r\n                worldY + gp.getTileSize() > gp.player.worldY - gp.player.screenY  &&\r\n                worldY - gp.getTileSize() < gp.player.worldY + gp.player.screenY )\r\n        {\r\n            if(direction == \"up\"){\r\n                if(spriteNum == 1){\r\n                    image = up1;\r\n                }\r\n                if(spriteNum == 2){\r\n                    image = up2;\r\n                }\r\n            }\r\n            else if(direction == \"down\"){\r\n                if(spriteNum == 1){\r\n                    image = down1;\r\n                }\r\n                if(spriteNum == 2){\r\n                    image = down2;\r\n                }\r\n            }\r\n            else if(direction == \"left\"){\r\n                if(spriteNum == 1){\r\n                    image = left1;\r\n                }\r\n                if(spriteNum == 2){\r\n                    image = left2;\r\n                }\r\n            }\r\n            else{\r\n                if(spriteNum == 1){\r\n                    image = right1;\r\n                }\r\n                if(spriteNum == 2){\r\n                    image = right2;\r\n                }\r\n            }\r\n            g2.drawImage(image, screenX, screenY, null);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/src/Entity/Entity.java b/app/src/main/java/src/Entity/Entity.java
--- a/app/src/main/java/src/Entity/Entity.java	
+++ b/app/src/main/java/src/Entity/Entity.java	
@@ -13,7 +13,7 @@
 
 TODO : IMPLEMENT abstract PLANT yang extend Entity.
        IMPLEMENT abstract ZOMBIE yang extend Entity
-       Buat ArrayList baru di GamePanel untuk menyimpan Plant dan Zombie saja
+       Buat ArrayList baru di GamePanel untuk menyimpan Plant dan Zombie saja.
 
  */
 public class Entity {
@@ -91,6 +91,7 @@
             spriteCounter = 0;
         }
     }
+
     public BufferedImage setup(String imagePath){
         UtilityTool uTool = new UtilityTool();
         BufferedImage Image = null;
Index: app/src/main/java/src/main/AssetSetter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package src.main;\r\n\r\nimport src.object.*;\r\nimport src.object.pellet.Cabbage_pellet;\r\nimport src.object.pellet.Kernel_pellet;\r\nimport src.object.plant.Cabbagepult;\r\nimport src.object.plant.Kernelpult;\r\nimport src.object.zombie.NormalZombie;\r\n\r\n/*\r\nASSETSETTER DIGUNAKAN UNTUK MELETAKAN OBJECT PADA MAP\r\nUNTUK SEKARANG MASIH DALAM TESTING PURPOSE\r\n */\r\n\r\n/*\r\nTODO : Coba test random spawn pada zombie, fokus pada koordinat worldY zombie.\r\n       Agar zombie bisa berada pas ditengah Tile, dikali dengan getTileSize()\r\n       Rand(1-6)+1 untuk 6 tiles.\r\n       Perlu Count Zombie untuk ngitung zombienya.\r\n       Zombie berhenti spawn pada detik 200.\r\n       Pake System.nanoTime() untuk hitung time. [1_000_000_000 nanoSecond] = 1 second\r\n\r\n       Tutorial : https://youtu.be/RXq8cyv_7Mc?si=RyHsIb0PsbNCpyHy\r\n */\r\n\r\npublic class AssetSetter {\r\n    GamePanel gp;\r\n\r\n    public AssetSetter(GamePanel gp){\r\n        this.gp = gp;\r\n    }\r\n\r\n    public void setZombie(){\r\n        gp.zombie[0] = new NormalZombie(gp);\r\n        gp.zombie[0].worldX = 8 * gp.getTileSize();\r\n        gp.zombie[0].worldY = 6 * gp.getTileSize();\r\n\r\n        gp.zombie[1] = new NormalZombie(gp);\r\n        gp.zombie[1].worldX = 9 * gp.getTileSize();\r\n        gp.zombie[1].worldY = 6 * gp.getTileSize();\r\n    }\r\n\r\n    public void setPlant(){\r\n\r\n        gp.plant[2] = new Kernelpult(gp);\r\n        gp.plant[2].worldX = 17 * gp.getTileSize();\r\n        gp.plant[2].worldY = 8 * gp.getTileSize();\r\n\r\n        //mulai dari 6\r\n        gp.plant[6] = new Cabbagepult(gp);\r\n        gp.plant[6].worldX = 18 * gp.getTileSize();\r\n        gp.plant[6].worldY = 8 * gp.getTileSize();\r\n    }\r\n\r\n    public void setObject(){\r\n\r\n        gp.obj[7] = new Cabbage_pellet(gp);\r\n        gp.obj[7].worldX = 18 * gp.getTileSize();\r\n        gp.obj[7].worldY = 7 * gp.getTileSize();\r\n\r\n        gp.obj[8] = new Door(gp);\r\n        gp.obj[8].worldX = 20 * gp.getTileSize();\r\n        gp.obj[8].worldY = 10 * gp.getTileSize();\r\n\r\n        gp.obj[5] = new Kernel_pellet(gp);\r\n        gp.obj[5].worldX = 17 * gp.getTileSize();\r\n        gp.obj[5].worldY = 7 * gp.getTileSize();\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/src/main/AssetSetter.java b/app/src/main/java/src/main/AssetSetter.java
--- a/app/src/main/java/src/main/AssetSetter.java	
+++ b/app/src/main/java/src/main/AssetSetter.java	
@@ -5,6 +5,7 @@
 import src.object.pellet.Kernel_pellet;
 import src.object.plant.Cabbagepult;
 import src.object.plant.Kernelpult;
+import src.object.zombie.Cat;
 import src.object.zombie.NormalZombie;
 
 /*
@@ -38,6 +39,10 @@
         gp.zombie[1] = new NormalZombie(gp);
         gp.zombie[1].worldX = 9 * gp.getTileSize();
         gp.zombie[1].worldY = 6 * gp.getTileSize();
+
+        gp.zombie[2] = new Cat(gp);
+        gp.zombie[2].worldX = 20 * gp.getTileSize();
+        gp.zombie[2].worldY = 10 * gp.getTileSize();
     }
 
     public void setPlant(){
